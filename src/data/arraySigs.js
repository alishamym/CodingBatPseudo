let sigs = {};
sigs.firstLast6="function firstLast6(nums:number[]):boolean"
sigs.sameFirstLast="function sameFirstLast(nums:number[])"
sigs.makePi="function makePi():number[]"
sigs.commonEnd="function commonEnd(a:number[], b:number[]):boolean"
sigs.sum3="function sum3(nums:number[])"
sigs.rotateLeft3="function rotateLeft3(nums:number[])"
sigs.reverse3="function reverse3(nums:number[])"
sigs.maxEnd3="function maxEnd3(nums:number[])"
sigs.sum2="function sum2(nums:number[])"
sigs.middleWay="function middleWay(a:number[], b:number[])"
sigs.makeEnds="function makeEnds(nums:number[])"
sigs.has23="function has23(nums:number[])"
sigs.no23="function no23(nums:number[])"
sigs.makeLast="function makeLast(nums:number[])"
sigs.double23="function double23(nums:number[])"
sigs.fix23="function fix23(nums:number[])"
sigs.findTheMedian="function findTheMedian(nums:number[])"
sigs.start1="function start1(a:number[], b:number[])"
sigs.biggerTwo="function biggerTwo(a:number[], b:number[])"
sigs.makeMiddle="function makeMiddle(nums:number[])"
sigs.plusTwo="function plusTwo(a:number, b:number)"
sigs.swapEnds="function swapEnds(nums:number[])"
sigs.findLowestIndex="function findLowestIndex(nums:number[])"
sigs.midThree="function midThree(nums:number[])"
sigs.maxTriple="function maxTriple(nums:number[])"
sigs.frontPiece="function frontPiece(nums:number[])"
sigs.unlucky1="function unlucky1(nums:number[])"
sigs.make2="function make2(a:number, b:number)"
sigs.front11="function front11(a:number, b:number)"
sigs.countEvens="function countEvens(nums:number[])"
sigs.bigDiff="function bigDiff(nums:number[])"
sigs.centeredAverage="function centeredAverage(nums:number[])"
sigs.sum13="function sum13(nums:number[])"
sigs.sum67="function sum67(nums:number[])"
sigs.has22="function has22(nums:number[])"
sigs.lucky13="function lucky13(nums:number[])"
sigs.sum28="function sum28(nums:number[])"
sigs.more14="function more14(nums:number[])"
sigs.fizzArray="function fizzArray(n:number):number[]"
sigs.prependSum="function prependSum(nums:number[])"
sigs.only14="function only14(nums:number[])"
sigs.fizzArray2="function fizzArray2(n:number):number[]"
sigs.no14="function no14(nums:number[])"
sigs.isEverywhere="function isEverywhere(nums:number[], val:number):number()"
sigs.either24="function either24(nums:number[])"
sigs.matchUp="function matchUp(nums:number[]1, nums:number[]2)"
sigs.has77="function has77(nums:number[])"
sigs.has12="function has12(nums:number[])"
sigs.modThree="function modThree(nums:number[])"
sigs.haveThree="function haveThree(nums:number[])"
sigs.twoTwo="function twoTwo(nums:number[])"
sigs.sameEnds="function sameEnds(nums:number[], len)"
sigs.tripleUp="function tripleUp(nums:number[])"
sigs.fizzArray3="function fizzArray3(start:number, end:number):number[]"
sigs.shiftLeft="function shiftLeft(nums:number[])"
sigs.tenRun="function tenRun(nums:number[])"
sigs.pre4="function pre4(nums:number[])"
sigs.post4="function post4(nums:number[])"
sigs.notAlone="function notAlone(nums:number[], val:number)"
sigs.zeroFront="function zeroFront(nums:number[])"
sigs.withoutTen="function withoutTen(nums:number[])"
sigs.zeroMax="function zeroMax(nums:number[])"
sigs.evenOdd="function evenOdd(nums:number[])"
sigs.fizzBuzz="function fizzBuzz(start:number, end:number)"
sigs.maxSpan="function maxSpan(nums:number[])"
sigs.fix34="function fix34(nums:number[])"
sigs.fix45="function fix45(nums:number[])"
sigs.canBalance="function canBalance(nums:number[])"
sigs.linearIn="function linearIn(outer, inner)"
sigs.squareUp="function squareUp(n:number)"
sigs.seriesUp="function seriesUp(n:number)"
sigs.maxMirror="function maxMirror(nums:number[])"
sigs.countClumps="function countClumps(nums:number[]"

module.exports = sigs;